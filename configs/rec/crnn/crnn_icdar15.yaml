system:
  mode: 0 # 0 for graph mode, 1 for pynative mode in MindSpore
  distribute: False 
  amp_level: 'O0'
  seed: 42
  log_interval: 100
  val_while_train: True
  drop_overflow_update: True

common:
  character_dict_path: &character_dict_path  #mindocr/utils/dict/en_dict.txt
  num_classes: &num_classes 37 # num_chars_in_dict+1,  TODO: retreive it from dict or check correctness
  max_text_len: &max_text_len 23
  infer_mode: &infer_mode False
  use_space_char: &use_space_char False
  batch_size: &batch_size 16

model:
  type: rec
  transform: null
  backbone:
    name: rec_vgg7 #resnet34@mindcv
    pretrained: False
  neck:
    name: RNNEncoder
    hidden_size: 256 
  head:
    name: CTCHead 
    out_channels: *num_classes 

postprocess:
  name: RecCTCLabelDecode
  character_dict_path: *character_dict_path
  use_space_char: *use_space_char
 
metric:
  name: RecMetric
  main_indicator: acc
  character_dict_path: *character_dict_path
  ignore_space: True 

loss:
  name: CTCLoss 
  pred_seq_len: 24 # TODO: retrieve from the network output shape.
  max_label_len: *max_text_len  # this value should be smaller than pre_seq_len
  batch_size: *batch_size

scheduler: 
  scheduler: "cosine_decay"
  min_lr: 0.000001
  lr: 0.0001
  num_epochs: 100
  warmup_epochs: 10
  decay_epochs: 90

optimizer:
  opt: adamw
  filter_bias_and_bn: False
  momentum: 0.9
  weight_decay: 0.0001
  no_weight_decay_params: ['beta', 'gamma', 'bias'] # filter norm and bias params from weight decay
  #grouping_strategy: "filter_norm_and_bias"  # uncomment this line to use a predefined grouping strategy.

# only used for mixed precision training
loss_scaler:
  type: dynamic 
  loss_scale: 512 
  scale_factor: 2.0
  scale_window: 1000  

train:
  gradient_accumulation_steps: 1
  clip_grad: True
  clip_norm: 0.0001
  ckpt_save_dir: './tmp_rec'
  dataset_sink_mode: False
  dataset:
    type: RecDataset
    dataset_root: /data/ocr_datasets 
    data_dir: ic15/rec/train/ch4_training_word_images_gt
    label_file: ic15/rec/train/rec_gt.txt
    sample_ratio: 1.0
    shuffle: True
    transform_pipeline:
      - DecodeImage: 
          img_mode: BGR
          to_float32: False
      - RecCTCLabelEncode:
          max_text_len: *max_text_len 
          character_dict_path: *character_dict_path
          use_space_char: *use_space_char
      - RecResizeImg: # different from paddle (paddle converts image from HWC to CHW and rescale to [-1, 1] after resize. 
          image_shape: [32, 100] # H, W
          infer_mode: *infer_mode
          character_dict_path: *character_dict_path
          padding: True # aspect ratio will be preserved if true.
      - NormalizeImage:  # different from paddle (paddle wrongly normalize BGR image with RGB mean/std from ImageNet for det, and simple rescale to [-1, 1] in rec. 
          bgr_to_rgb: True
          is_hwc: True
          mean : [127.0, 127.0, 127.0] 
          std : [127.0, 127.0, 127.0]
      - ToCHWImage: 
    #  the order of the dataloader list, matching the network input and the input labels for the loss function, and optional data for debug/visaulize 
    output_columns: ['image', 'text_seq']
    num_columns_to_net: 1 # num inputs for network forward func in output_columns
     
  loader:
      shuffle: True # TODO: tbc
      batch_size: *batch_size
      drop_remainder: True
      max_rowsize: 16
      num_workers: 8

eval:
  ckpt_load_path: './tmp_rec/best.ckpt'
  dataset_sink_mode: False
  dataset:
    type: RecDataset
    dataset_root: /data/ocr_datasets 
    data_dir: ic15/rec/test/ch4_test_word_images_gt
    label_file: ic15/rec/test/rec_gt.txt
    sample_ratio: 1.0
    shuffle: False 
    transform_pipeline:
      - DecodeImage: 
          img_mode: BGR
          to_float32: False
      - RecCTCLabelEncode:
          max_text_len: *max_text_len 
          character_dict_path: *character_dict_path
          use_space_char: *use_space_char
      - RecResizeImg: # different from paddle (paddle converts image from HWC to CHW and rescale to [-1, 1] after resize. 
          image_shape: [32, 100] # H, W
          infer_mode: *infer_mode
          character_dict_path: *character_dict_path
          padding: False # aspect ratio will be preserved if true.
      - NormalizeImage:  # different from paddle (paddle wrongly normalize BGR image with RGB mean/std from ImageNet for det, and simple rescale to [-1, 1] in rec. 
          bgr_to_rgb: True
          is_hwc: True
          mean : [127.0, 127.0, 127.0] 
          std : [127.0, 127.0, 127.0]
      - ToCHWImage: 
    #  the order of the dataloader list, matching the network input and the input labels for the loss function, and optional data for debug/visaulize 
    output_columns: ['image', 'text_padded', 'text_length', 'img_path']  # TODO return text string padding w/ fixed length, and a scaler to indicate the length 
    num_columns_to_net: 1 # num inputs for network forward func
    num_columns_of_labels: 2 # num of label columns 
     
  loader:
      shuffle: False
      batch_size: 7
      drop_remainder: False
      max_rowsize: 12
      num_workers: 2
